{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Project Web/AntreDokter/frontend/src/hooks/useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n        checkAuth();\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        logout();\n      }\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const checkAuth = async () => {\n    try {\n      const response = await authAPI.me();\n      setUser(response.data.data.user);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (phoneNumber, password) => {\n    try {\n      const response = await authAPI.login({\n        phoneNumber,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login gagal'\n      };\n    }\n  };\n  const register = async (fullName, phoneNumber, password) => {\n    try {\n      const response = await authAPI.register({\n        fullName,\n        phoneNumber,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registrasi gagal'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","checkAuth","error","console","logout","response","me","data","login","phoneNumber","password","setItem","stringify","success","_error$response","_error$response$data","message","register","fullName","_error$response2","_error$response2$data","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/user/Documents/Project Web/AntreDokter/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../utils/api';\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n        checkAuth();\n      } catch (error) {\n        console.error('Error parsing user data:', error);\n        logout();\n      }\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const checkAuth = async () => {\n    try {\n      const response = await authAPI.me();\n      setUser(response.data.data.user);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (phoneNumber, password) => {\n    try {\n      const response = await authAPI.login({ phoneNumber, password });\n      const { user: userData, token } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      \n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Login gagal'\n      };\n    }\n  };\n\n  const register = async (fullName, phoneNumber, password) => {\n    try {\n      const response = await authAPI.register({ fullName, phoneNumber, password });\n      const { user: userData, token } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      \n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Registrasi gagal'\n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}