{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  register: data => api.post('/auth/register', data),\n  login: data => api.post('/auth/login', data),\n  me: () => api.get('/auth/me')\n};\nexport const queueAPI = {\n  getAvailableSlots: date => api.get(`/queue/available-slots?date=${date}`),\n  bookQueue: data => api.post('/queue/book', data),\n  getMyQueues: () => api.get('/queue/my-queues'),\n  getCurrentQueue: () => api.get('/queue/current'),\n  cancelQueue: queueId => api.patch(`/queue/cancel/${queueId}`),\n  callNextQueue: () => api.post('/queue/call-next'),\n  completeQueue: queueId => api.patch(`/queue/complete/${queueId}`),\n  updateQueueStatus: (queueId, data) => api.patch(`/queue/update-status/${queueId}`, data),\n  getQueuesByDate: date => api.get(`/queue/by-date?date=${date}`)\n};\nexport const adminAPI = {\n  getSettings: () => api.get('/admin/settings'),\n  updateSettings: data => api.put('/admin/settings', data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","data","post","login","me","get","queueAPI","getAvailableSlots","date","bookQueue","getMyQueues","getCurrentQueue","cancelQueue","queueId","patch","callNextQueue","completeQueue","updateQueueStatus","getQueuesByDate","adminAPI","getSettings","updateSettings","put"],"sources":["/Users/user/Documents/Project Web/AntreDokter/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const authAPI = {\n  register: (data) => api.post('/auth/register', data),\n  login: (data) => api.post('/auth/login', data),\n  me: () => api.get('/auth/me'),\n};\n\nexport const queueAPI = {\n  getAvailableSlots: (date) => api.get(`/queue/available-slots?date=${date}`),\n  bookQueue: (data) => api.post('/queue/book', data),\n  getMyQueues: () => api.get('/queue/my-queues'),\n  getCurrentQueue: () => api.get('/queue/current'),\n  cancelQueue: (queueId) => api.patch(`/queue/cancel/${queueId}`),\n  callNextQueue: () => api.post('/queue/call-next'),\n  completeQueue: (queueId) => api.patch(`/queue/complete/${queueId}`),\n  updateQueueStatus: (queueId, data) => api.patch(`/queue/update-status/${queueId}`, data),\n  getQueuesByDate: (date) => api.get(`/queue/by-date?date=${date}`),\n};\n\nexport const adminAPI = {\n  getSettings: () => api.get('/admin/settings'),\n  updateSettings: (data) => api.put('/admin/settings', data),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}